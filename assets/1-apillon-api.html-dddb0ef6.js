import{_ as l,r as d,o as p,c as u,b as e,e as t,d as s,w as a,a as n}from"./app-e6956d4a.js";const h={},b=n('<h1 id="apillon-api" tabindex="-1"><a class="header-anchor" href="#apillon-api" aria-hidden="true">#</a> Apillon API</h1><div class="divider"></div><h2 id="endpoints" tabindex="-1"><a class="header-anchor" href="#endpoints" aria-hidden="true">#</a> Endpoints</h2><p>The list of endpoints where API is available:</p><table><thead><tr><th>Environment</th><th>URL</th></tr></thead><tbody><tr><td>Production</td><td>https://api.apillon.io</td></tr><tr><td>Testing</td><td>Coming soon...</td></tr></tbody></table><h2 id="api-to-web3" tabindex="-1"><a class="header-anchor" href="#api-to-web3" aria-hidden="true">#</a> API to Web3</h2><p>Apillon API is a set of RESTful API endpoints allowing developers to integrate Apillon modules into their Web3 applications.</p><p>Unless clearly marked as public, all routes are private and require an API key.</p><h3 id="requests" tabindex="-1"><a class="header-anchor" href="#requests" aria-hidden="true">#</a> Requests</h3>',9),m={href:"https://en.wikipedia.org/wiki/JSON",target:"_blank",rel:"noopener noreferrer"},g=e("code",null,"Content-Type",-1),k=e("code",null,"application/json;",-1),_=e("h3",{id:"authentication-and-authorization",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#authentication-and-authorization","aria-hidden":"true"},"#"),t(" Authentication and authorization")],-1),v=e("p",null,"API routes restrict public access and require authentication.",-1),f={href:"https://en.wikipedia.org/wiki/Basic_access_authentication",target:"_blank",rel:"noopener noreferrer"},y=e("code",null,"Authorization: Basic <credentials>",-1),A=e("code",null,":",-1),x={href:"https://app.apillon.io/dashboard/api-keys",target:"_blank",rel:"noopener noreferrer"},I=n('<h4 id="authentication-errors" tabindex="-1"><a class="header-anchor" href="#authentication-errors" aria-hidden="true">#</a> Authentication errors</h4><p>Every request goes through authentication middleware, where the following errors can occur:</p><table><thead><tr><th>Status</th><th>Message</th><th>Description</th></tr></thead><tbody><tr><td>400</td><td>Missing Authorization header</td><td>Request is missing authorization header.</td></tr><tr><td>400</td><td>Malformed Authorization header</td><td>Authorization header field has an invalid form.</td></tr><tr><td>401</td><td>Invalid API key or API key secret</td><td>Authorization header is valid, but credentials in it are not.</td></tr></tbody></table><h4 id="authorization-errors" tabindex="-1"><a class="header-anchor" href="#authorization-errors" aria-hidden="true">#</a> Authorization errors</h4><p>Each endpoint requires a certain role or permission from the API key.</p><p>There are three types of permissions that could be assigned to an API key:</p><table><thead><tr><th>Code</th><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>50</td><td>KEY_EXECUTE</td><td>Permission to execute certain actions</td></tr><tr><td>51</td><td>KEY_WRITE</td><td>Permission to create, modify or delete records</td></tr><tr><td>52</td><td>KEY_READ</td><td>Permission to read record</td></tr></tbody></table><p>These permissions could be assigned to an API key for every attached service (e.g., Web3 Storage (Crust), Web3 Authentication (KILT), etc.).</p><p>If a request is made with an API key that lacks permission for a called endpoint, the following errors can occur:</p><table><thead><tr><th>Status</th><th>Message</th><th>Description</th></tr></thead><tbody><tr><td>403</td><td>Insufficient permissions - missing <code>permission name</code> permission</td><td>API key lacks required permission for called service.</td></tr><tr><td>403</td><td>Insufficient permissions to access this record</td><td>API key has required permissions for endpoint, but it does not have the right to access the addressed record (i.e., a record belongs to a different project).</td></tr></tbody></table><h3 id="listing-requests" tabindex="-1"><a class="header-anchor" href="#listing-requests" aria-hidden="true">#</a> Listing requests</h3><p>Endpoints starting with &quot;List&quot; are intended to list different data, where the response contains the below properties.</p><table><thead><tr><th>Name</th><th>Description</th></tr></thead><tbody><tr><td>items</td><td>Records on a specified page that match the current query</td></tr><tr><td>total</td><td>Number of all records that match the query</td></tr><tr><td>limit</td><td>Number of items on a page (default: 20).</td></tr><tr><td>page</td><td>Current page</td></tr></tbody></table><p>Listing endpoints by default supports the query parameters below:</p><table><thead><tr><th>Name</th><th>Description</th><th>Required</th></tr></thead><tbody><tr><td>search</td><td>Search the items usually by name or some other property specifying this item.</td><td>false</td></tr><tr><td>page</td><td>Items are paginated by default. This parameter is used to get items from a specific page.</td><td>false</td></tr><tr><td>limit</td><td>Number of items on a page (default: 20).</td><td>false</td></tr><tr><td>orderBy</td><td>One or multiple properties, separated by a comma, used to order data.</td><td>false</td></tr><tr><td>desc</td><td><code>Boolean</code> values, mapped to the index of the <code>orderBy</code> parameter. Defaults to false.</td><td>false</td></tr><tr><td>status</td><td>Integer values, to filter by the entity&#39;s status (each entity has corresponding status codes)</td><td>false</td></tr></tbody></table><h3 id="responses" tabindex="-1"><a class="header-anchor" href="#responses" aria-hidden="true">#</a> Responses</h3>',16),q={class:"split_content"},E=n('<div class="split_side"><p>Every response has a unique ID, which helps identify potential issues. It also includes a status code that can help identify the cause of a potential problem.</p><p>Query requests through the <code>GET</code> method can return status codes <code>200</code>, <code>400</code>, <code>401</code>, <code>403</code>, or <code>500</code>. Mutations through <code>POST</code>, <code>PUT</code>, and <code>DELETE</code> can also return codes <code>201</code> and <code>422</code>. Invalid routes return status code <code>404</code>.</p><p>A successful request includes a <code>data</code> key, which holds a valid response object.</p></div>',1),P={class:"split_side"},w=e("div",{class:"language-json line-numbers-mode","data-ext":"json"},[e("pre",{class:"language-json"},[e("code",null,[e("span",{class:"token punctuation"},"{"),t(`
  `),e("span",{class:"token property"},'"id"'),e("span",{class:"token operator"},":"),t(" ..."),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token property"},'"status"'),e("span",{class:"token operator"},":"),t(" ..."),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token property"},'"data"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token punctuation"},"{"),t(" ... "),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},","),t(`
`),e("span",{class:"token punctuation"},"}"),t(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),T=n('<p>List of responses:</p><ul><li><strong>200</strong>: Success</li><li><strong>201</strong>: Creation successful</li><li><strong>400</strong>: Bad request</li><li><strong>401</strong>: Unauthenticated access</li><li><strong>402</strong>: Payment required</li><li><strong>403</strong>: Unauthorized access</li><li><strong>404</strong>: Path not found</li><li><strong>422</strong>: Data validation failed</li><li><strong>500</strong>: System error</li></ul><h3 id="error-handling" tabindex="-1"><a class="header-anchor" href="#error-handling" aria-hidden="true">#</a> Error handling</h3><p>A request fails if response code is not 200 or 201. The Apillon API returns two types of errors.</p><h4 id="code-exception" tabindex="-1"><a class="header-anchor" href="#code-exception" aria-hidden="true">#</a> Code exception</h4><p>Errors include a unique code number, a property that caused the error, and an error message. The code number helps identify potential issues and points to their exact position in the system.</p><p>Fields in code exception:</p>',7),j={class:"split_content"},C=n('<div class="split_side"><table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td>Unique ID of request</td></tr><tr><td>code</td><td>Apillon API internal error code pointing to the exact position in the system</td></tr><tr><td>message</td><td>Message describing the error</td></tr><tr><td>path</td><td>Endpoint that threw the error</td></tr><tr><td>timestamp</td><td>Date when the error occurred</td></tr></tbody></table></div>',1),N={class:"split_side"},D=e("div",{class:"language-json line-numbers-mode","data-ext":"json"},[e("pre",{class:"language-json"},[e("code",null,[e("span",{class:"token punctuation"},"{"),t(`
  `),e("span",{class:"token property"},'"id"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"c46821e7-a6c3-4377-bc32-0001e348ceb4"'),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token property"},'"code"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token number"},"40406005"),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token property"},'"message"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"FILE_DOES_NOT_EXIST"'),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token property"},'"path"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"/storage/cee9f151-a371-495b-acd2-4362fbb87780/file/xxx/detail"'),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token property"},'"timestamp"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"2022-12-29T11:54:47.555Z"'),t(`
`),e("span",{class:"token punctuation"},"}"),t(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),R=e("h4",{id:"validation-exception",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#validation-exception","aria-hidden":"true"},"#"),t(" Validation exception")],-1),S={class:"split_content"},z=e("div",{class:"split_side"},[e("p",null,[t("Unprocessable entity "),e("code",null,"422 Error status"),t(" includes an "),e("code",null,"errors"),t(" key containing a list of error objects.")]),e("p",null,"This error typically occurs when the request body is not valid (i.e., it is invalid or missing keys)."),e("p",null,"Errors include a unique code number, a property that caused the error, and an error message. The code number helps identify potential issues and points to their exact position in the system.")],-1),L={class:"split_side"},O=e("div",{class:"language-json line-numbers-mode","data-ext":"json"},[e("pre",{class:"language-json"},[e("code",null,[e("span",{class:"token punctuation"},"{"),t(`
  ...
  `),e("span",{class:"token property"},'"errors"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token punctuation"},"["),t(`
    `),e("span",{class:"token punctuation"},"{"),t(`
        `),e("span",{class:"token property"},'"code"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token number"},"42200008"),e("span",{class:"token punctuation"},","),t(`
        `),e("span",{class:"token property"},'"property"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"fileName"'),e("span",{class:"token punctuation"},","),t(`
        `),e("span",{class:"token property"},'"message"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"FILE_NAME_NOT_PRESENT"'),t(`
    `),e("span",{class:"token punctuation"},"}"),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token punctuation"},"]"),t(`
`),e("span",{class:"token punctuation"},"}"),t(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),B=n(`<p>Fields in validation exception:</p><table><thead><tr><th>Field</th><th>Description</th></tr></thead><tbody><tr><td>id</td><td>Unique ID of request</td></tr><tr><td>model</td><td>Apillon API model used to validate request payload</td></tr><tr><td>errors</td><td>Array of errors</td></tr><tr><td>path</td><td>Endpoint that threw the error</td></tr><tr><td>timestamp</td><td>Date when the error occurred</td></tr></tbody></table><h3 id="common-errors" tabindex="-1"><a class="header-anchor" href="#common-errors" aria-hidden="true">#</a> Common errors</h3><p>Through the whole Apillon API, the same errors can occur. The reason behind it can be current subscription package limits or current credit balance.</p><h4 id="not-enough-storage-space" tabindex="-1"><a class="header-anchor" href="#not-enough-storage-space" aria-hidden="true">#</a> Not enough storage space</h4><p>One of the limits based on the project subscription package is available storage space (on the IPFS node). If a project reaches the storage space limit, the following error will occur.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">40006003</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;NOT_ENOUGH_STORAGE_SPACE&quot;</span><span class="token punctuation">,</span>
    ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="credit-balance-too-low" tabindex="-1"><a class="header-anchor" href="#credit-balance-too-low" aria-hidden="true">#</a> Credit balance too low</h4><p>Some nonrecurrent actions require payment with credits. If a project&#39;s credit balance is lower than price of executed action, API will return status 402 and the following response.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
    ...
    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">40210000</span><span class="token punctuation">,</span>
    <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;CREDIT_BALANCE_TOO_LOW&quot;</span><span class="token punctuation">,</span>
    ...
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="project" tabindex="-1"><a class="header-anchor" href="#project" aria-hidden="true">#</a> Project</h2><p>Api key is created inside a project and can be used to get project details through Apillon API.</p><h3 id="credit-balance" tabindex="-1"><a class="header-anchor" href="#credit-balance" aria-hidden="true">#</a> Credit balance</h3><blockquote><p>API to get project credit balance</p></blockquote>`,14),U={class:"split_content"},G=n('<div class="split_side"><h4 id="response-fields" tabindex="-1"><a class="header-anchor" href="#response-fields" aria-hidden="true">#</a> Response fields</h4><table><thead><tr><th>Name</th><th>Type</th><th>Description</th></tr></thead><tbody><tr><td>balance</td><td><code>number</code></td><td>Current credit balance - amount of credits in project, that can be used to perform different actions</td></tr></tbody></table></div>',1),F={class:"split_side"},M=e("br",null,null,-1),W=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"curl"),t(),e("span",{class:"token parameter variable"},"--location"),t(),e("span",{class:"token parameter variable"},"--request"),t(" GET "),e("span",{class:"token string"},'"https://api.apillon.io/project/credit"'),t(),e("span",{class:"token punctuation"},"\\"),t(`
`),e("span",{class:"token parameter variable"},"--header"),t(),e("span",{class:"token string"},'"Authorization: Basic :credentials"'),t(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),V=e("div",{class:"language-json line-numbers-mode","data-ext":"json"},[e("pre",{class:"language-json"},[e("code",null,[e("span",{class:"token punctuation"},"{"),t(`
  `),e("span",{class:"token property"},'"id"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token string"},'"ec700ddd-4a0d-4d6d-b3ba-64b7ab031c4b"'),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token property"},'"status"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token number"},"200"),e("span",{class:"token punctuation"},","),t(`
  `),e("span",{class:"token property"},'"data"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token punctuation"},"{"),t(`
    `),e("span",{class:"token property"},'"balance"'),e("span",{class:"token operator"},":"),t(),e("span",{class:"token number"},"120"),t(`
  `),e("span",{class:"token punctuation"},"}"),t(`
`),e("span",{class:"token punctuation"},"}"),t(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"}),e("div",{class:"line-number"})])],-1),K=e("h2",{id:"api-code-examples",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#api-code-examples","aria-hidden":"true"},"#"),t(" API Code Examples")],-1),H={href:"https://github.com/Apillon/code-examples",target:"_blank",rel:"noopener noreferrer"};function Y(J,X){const i=d("ExternalLinkIcon"),o=d("CodeGroupItem"),r=d("CodeGroup"),c=d("CodeDiv");return p(),u("div",null,[b,e("p",null,[t("The server speaks "),e("a",m,[t("JSON"),s(i)]),t(". It is recommended that every call to the server includes a "),g,t(" header set to "),k,t(".")]),_,v,e("p",null,[t("Requests must include a "),e("a",f,[t("basic auth"),s(i)]),t(" HTTP header field in the form of "),y,t(", where credentials represent the Base64 encoding of API key and API key secret joined by a single colon "),A,t(".")]),e("p",null,[t("API keys could be generated on the "),e("a",x,[t("developer dashboard"),s(i)]),t(" under Project settings.")]),I,e("div",q,[E,e("div",P,[s(r,null,{default:a(()=>[s(o,{title:"Response",active:""},{default:a(()=>[w]),_:1})]),_:1})])]),T,e("div",j,[C,e("div",N,[s(r,null,{default:a(()=>[s(o,{title:"Response",active:""},{default:a(()=>[D]),_:1})]),_:1})])]),R,e("div",S,[z,e("div",L,[s(r,null,{default:a(()=>[s(o,{title:"Response",active:""},{default:a(()=>[O]),_:1})]),_:1})])]),B,s(c,null,{default:a(()=>[t("GET /project/credit")]),_:1}),e("div",U,[G,e("div",F,[M,s(r,null,{default:a(()=>[s(o,{title:"cURL basic",active:""},{default:a(()=>[W]),_:1})]),_:1}),s(r,null,{default:a(()=>[s(o,{title:"Response"},{default:a(()=>[V]),_:1})]),_:1})])]),K,e("p",null,[t("Examples for using the Apillon API in PHP, .NET (C#) and Python can be found on "),e("a",H,[t("our code examples github repo"),s(i)])])])}const Z=l(h,[["render",Y],["__file","1-apillon-api.html.vue"]]);export{Z as default};
