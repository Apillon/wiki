import{_ as i,r as t,o as c,c as l,b as n,e as a,d as s,w as u,a as o}from"./app-e6956d4a.js";const r={},d=n("h1",{id:"go-storage-sdk",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#go-storage-sdk","aria-hidden":"true"},"#"),a(" Go Storage SDK")],-1),k=n("p",null,[a("A Go SDK for interacting with the "),n("a",{href:"/build/2-storage-api"},"Apillon Storage API"),a(". This SDK allows you to manage storage buckets, upload and manage files, and retrieve IPFS links programmatically.")],-1),v={href:"https://github.com/Apillon/go-sdk",target:"_blank",rel:"noopener noreferrer"},g=o('<h2 id="features" tabindex="-1"><a class="header-anchor" href="#features" aria-hidden="true">#</a> Features</h2><h3 id="storage-api" tabindex="-1"><a class="header-anchor" href="#storage-api" aria-hidden="true">#</a> Storage API</h3><ul><li><strong>Bucket Management:</strong> Create, list, and retrieve storage buckets.</li><li><strong>File Upload:</strong> Upload single or multiple files to a bucket.</li><li><strong>File Management:</strong> List, retrieve details, and delete files.</li><li><strong>Directory Management:</strong> Delete directories from a bucket.</li><li><strong>IPFS Integration:</strong> Retrieve or generate IPFS links for files.</li><li><strong>IPFS Cluster Info:</strong> Retrieve IPFS cluster information.</li></ul><h3 id="sdk-features" tabindex="-1"><a class="header-anchor" href="#sdk-features" aria-hidden="true">#</a> SDK features</h3><ul><li><strong>Session Management:</strong> Manage upload sessions for batch file uploads.</li><li><strong>Context Support:</strong> All operations support context for cancellation and timeouts.</li><li><strong>Robust Error Handling:</strong> Comprehensive error types and detailed error messages.</li><li><strong>Automatic Retries:</strong> Built-in retry mechanism for failed requests.</li><li><strong>Input Validation:</strong> Thorough validation of all input parameters.</li></ul><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ul><li>Go 1.20 or higher</li><li>Apillon API key</li></ul><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h2>',8),m={href:"https://apillon.io/",target:"_blank",rel:"noopener noreferrer"},h=o(`<h2 id="installation" tabindex="-1"><a class="header-anchor" href="#installation" aria-hidden="true">#</a> Installation</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go get github.com/Apillon/go-sdk
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="initialization" tabindex="-1"><a class="header-anchor" href="#initialization" aria-hidden="true">#</a> Initialization</h2><p>Import the SDK in your Go code:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;context&quot;</span>
    <span class="token string">&quot;github.com/Apillon/go-sdk/storage&quot;</span>
    <span class="token string">&quot;github.com/Apillon/go-sdk/requests&quot;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>All modules require the API key for authentication. You can provide it in two ways:</p><h3 id="_1-environment-variables" tabindex="-1"><a class="header-anchor" href="#_1-environment-variables" aria-hidden="true">#</a> 1. Environment Variables</h3><p>Set the environment variable <code>APILLON_API_KEY</code> before running your application.</p><p><strong>Windows (Command Prompt):</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">set</span> <span class="token assign-left variable">APILLON_API_KEY</span><span class="token operator">=</span>your_api_key_here
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Linux/macOS:</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">APILLON_API_KEY</span><span class="token operator">=</span>your_api_key_here
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_2-programatically" tabindex="-1"><a class="header-anchor" href="#_2-programatically" aria-hidden="true">#</a> 2. Programatically</h3><p>You can set the API key at runtime in your Go code:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>requests<span class="token punctuation">.</span><span class="token function">SetAPIKey</span><span class="token punctuation">(</span><span class="token string">&quot;your_api_key_here&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><h3 id="import-the-sdk" tabindex="-1"><a class="header-anchor" href="#import-the-sdk" aria-hidden="true">#</a> Import the SDK</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">import</span> <span class="token punctuation">(</span>
    <span class="token string">&quot;github.com/Apillon/go-sdk/storage&quot;</span>
<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="create-a-bucket" tabindex="-1"><a class="header-anchor" href="#create-a-bucket" aria-hidden="true">#</a> Create a Bucket</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">CreateBucket</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token string">&quot;my-bucket&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;A description for my bucket&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-buckets" tabindex="-1"><a class="header-anchor" href="#list-buckets" aria-hidden="true">#</a> List Buckets</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
buckets<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">GetBucket</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> <span class="token string">&quot;my-bucket&quot;</span><span class="token punctuation">)</span> <span class="token comment">// or storage.GetBucket(ctx, &quot;&quot;) for all buckets</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> bucket <span class="token operator">:=</span> <span class="token keyword">range</span> buckets<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>Items <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>bucket<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> bucket<span class="token punctuation">.</span>BucketUUID<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="upload-files" tabindex="-1"><a class="header-anchor" href="#upload-files" aria-hidden="true">#</a> Upload Files</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
files <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>storage<span class="token punctuation">.</span>WholeFile<span class="token punctuation">{</span>
    <span class="token punctuation">{</span>
        Metadata<span class="token punctuation">:</span> storage<span class="token punctuation">.</span>FileMetadata<span class="token punctuation">{</span>
            FileName<span class="token punctuation">:</span>    <span class="token string">&quot;example.txt&quot;</span><span class="token punctuation">,</span>
            ContentType<span class="token punctuation">:</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        Content<span class="token punctuation">:</span> <span class="token string">&quot;Hello, Apillon!&quot;</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

bucketUUID <span class="token operator">:=</span> <span class="token string">&quot;your-bucket-uuid&quot;</span>
result<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">UploadFileProcess</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bucketUUID<span class="token punctuation">,</span> files<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Upload result:&quot;</span><span class="token punctuation">,</span> result<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="list-files-in-a-bucket" tabindex="-1"><a class="header-anchor" href="#list-files-in-a-bucket" aria-hidden="true">#</a> List Files in a Bucket</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
fileList<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">ListFilesInBucket</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bucketUUID<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
<span class="token keyword">for</span> <span class="token boolean">_</span><span class="token punctuation">,</span> file <span class="token operator">:=</span> <span class="token keyword">range</span> fileList<span class="token punctuation">.</span>Data<span class="token punctuation">.</span>Items <span class="token punctuation">{</span>
    fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>Name<span class="token punctuation">,</span> file<span class="token punctuation">.</span>FileUUID<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-file-details" tabindex="-1"><a class="header-anchor" href="#get-file-details" aria-hidden="true">#</a> Get File Details</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
fileDetails<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">GetFileDetails</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bucketUUID<span class="token punctuation">,</span> fileUUID<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;File details: %+v\\n&quot;</span><span class="token punctuation">,</span> fileDetails<span class="token punctuation">.</span>Data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="delete-a-file" tabindex="-1"><a class="header-anchor" href="#delete-a-file" aria-hidden="true">#</a> Delete a File</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token boolean">_</span><span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">DeleteFile</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bucketUUID<span class="token punctuation">,</span> fileUUID<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="delete-a-directory" tabindex="-1"><a class="header-anchor" href="#delete-a-directory" aria-hidden="true">#</a> Delete a Directory</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">DeleteDirectory</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bucketUUID<span class="token punctuation">,</span> directoryUUID<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Delete directory response: %+v\\n&quot;</span><span class="token punctuation">,</span> resp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-or-generate-ipfs-link" tabindex="-1"><a class="header-anchor" href="#get-or-generate-ipfs-link" aria-hidden="true">#</a> Get or Generate IPFS Link</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
ipfsLink<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">GetOrGenerateIPFSLink</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> cid<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;IPFS Link:&quot;</span><span class="token punctuation">,</span> ipfsLink<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-ipfs-cluster-info" tabindex="-1"><a class="header-anchor" href="#get-ipfs-cluster-info" aria-hidden="true">#</a> Get IPFS Cluster Info</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
info<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">GetIPFSClusterInfo</span><span class="token punctuation">(</span>ctx<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;IPFS Cluster Info: %+v\\n&quot;</span><span class="token punctuation">,</span> info<span class="token punctuation">.</span>Data<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get-bucket-content" tabindex="-1"><a class="header-anchor" href="#get-bucket-content" aria-hidden="true">#</a> Get Bucket Content</h3><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
content<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">GetBucketContent</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bucketUUID<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Bucket Content:&quot;</span><span class="token punctuation">,</span> content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="advanced-manual-upload-session-control" tabindex="-1"><a class="header-anchor" href="#advanced-manual-upload-session-control" aria-hidden="true">#</a> Advanced: Manual Upload Session Control</h3><h4 id="start-an-upload-session" tabindex="-1"><a class="header-anchor" href="#start-an-upload-session" aria-hidden="true">#</a> Start an Upload Session</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
files <span class="token operator">:=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>storage<span class="token punctuation">.</span>FileMetadata<span class="token punctuation">{</span>
    <span class="token punctuation">{</span>FileName<span class="token punctuation">:</span> <span class="token string">&quot;file1.txt&quot;</span><span class="token punctuation">,</span> ContentType<span class="token punctuation">:</span> <span class="token string">&quot;text/plain&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>FileName<span class="token punctuation">:</span> <span class="token string">&quot;file2.json&quot;</span><span class="token punctuation">,</span> ContentType<span class="token punctuation">:</span> <span class="token string">&quot;application/json&quot;</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>
resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">StartUploadFilesToBucket</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bucketUUID<span class="token punctuation">,</span> files<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;Start upload session response:&quot;</span><span class="token punctuation">,</span> resp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="upload-file-content-to-signed-url" tabindex="-1"><a class="header-anchor" href="#upload-file-content-to-signed-url" aria-hidden="true">#</a> Upload File Content to Signed URL</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">UploadFiles</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> signedURL<span class="token punctuation">,</span> fileContent<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="end-an-upload-session" tabindex="-1"><a class="header-anchor" href="#end-an-upload-session" aria-hidden="true">#</a> End an Upload Session</h4><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code>ctx <span class="token operator">:=</span> context<span class="token punctuation">.</span><span class="token function">Background</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
resp<span class="token punctuation">,</span> err <span class="token operator">:=</span> storage<span class="token punctuation">.</span><span class="token function">EndSession</span><span class="token punctuation">(</span>ctx<span class="token punctuation">,</span> bucketUUID<span class="token punctuation">,</span> sessionID<span class="token punctuation">)</span>
<span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token comment">// handle error</span>
<span class="token punctuation">}</span>
fmt<span class="token punctuation">.</span><span class="token function">Println</span><span class="token punctuation">(</span><span class="token string">&quot;End session response:&quot;</span><span class="token punctuation">,</span> resp<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="error-handling" tabindex="-1"><a class="header-anchor" href="#error-handling" aria-hidden="true">#</a> Error Handling</h2><p>The SDK provides detailed error information through the <code>StorageError</code> type:</p><div class="language-go line-numbers-mode" data-ext="go"><pre class="language-go"><code><span class="token keyword">if</span> err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> storageErr<span class="token punctuation">,</span> ok <span class="token operator">:=</span> err<span class="token punctuation">.</span><span class="token punctuation">(</span><span class="token operator">*</span>storage<span class="token punctuation">.</span>StorageError<span class="token punctuation">)</span><span class="token punctuation">;</span> ok <span class="token punctuation">{</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Error Code: %d\\n&quot;</span><span class="token punctuation">,</span> storageErr<span class="token punctuation">.</span>Code<span class="token punctuation">)</span>
        fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Error Message: %s\\n&quot;</span><span class="token punctuation">,</span> storageErr<span class="token punctuation">.</span>Message<span class="token punctuation">)</span>
        <span class="token keyword">if</span> storageErr<span class="token punctuation">.</span>Err <span class="token operator">!=</span> <span class="token boolean">nil</span> <span class="token punctuation">{</span>
            fmt<span class="token punctuation">.</span><span class="token function">Printf</span><span class="token punctuation">(</span><span class="token string">&quot;Original Error: %v\\n&quot;</span><span class="token punctuation">,</span> storageErr<span class="token punctuation">.</span>Err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Common error codes:</p><ul><li><code>ErrCodeInvalidInput</code> (40000001): Invalid input parameters</li><li><code>ErrCodeDirectoryNotFound</code> (40406003): Directory not found</li><li><code>ErrCodeDirectoryDeleting</code> (40006007): Directory already marked for deletion</li></ul><h2 id="running-tests" tabindex="-1"><a class="header-anchor" href="#running-tests" aria-hidden="true">#</a> Running Tests</h2><p>The SDK includes comprehensive unit tests. To run all tests:</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>go <span class="token builtin class-name">test</span> ./<span class="token punctuation">..</span>.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="notes" tabindex="-1"><a class="header-anchor" href="#notes" aria-hidden="true">#</a> Notes</h2>`,54),b=n("li",null,[a("Ensure your API key is kept secure and "),n("strong",null,"never"),a(" committed to version control.")],-1),f=n("li",null,"The SDK supports context for better control over request lifecycle and cancellation.",-1),x=n("li",null,"All operations include automatic retries for failed requests.",-1),y=n("li",null,"Input validation is performed on all operations to ensure data integrity.",-1);function q(_,I){const e=t("ExternalLinkIcon"),p=t("RouterLink");return c(),l("div",null,[d,k,n("p",null,[a("GitHub repository: "),n("a",v,[a("https://github.com/Apillon/go-sdk"),s(e)])]),g,n("p",null,[a("To use the Apillon Storage Go SDK, you must register an account at "),n("a",m,[a("Apillon.io"),s(e)]),a(", create a project, and generate an API key.")]),h,n("ul",null,[b,n("li",null,[a("For more details on the Apillon and the API, see the "),s(p,{to:"/build/1-apillon-api.html"},{default:u(()=>[a("API documentation")]),_:1}),a(".")]),f,x,y])])}const S=i(r,[["render",q],["__file","15-go-storage-sdk.html.vue"]]);export{S as default};
