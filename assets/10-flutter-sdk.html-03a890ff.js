import{_ as e,r as o,o as i,c,b as s,e as n,d as t,a as p}from"./app-e6956d4a.js";const l={},u=p('<h1 id="apillon-flutter-sdk" tabindex="-1"><a class="header-anchor" href="#apillon-flutter-sdk" aria-hidden="true">#</a> Apillon Flutter SDK</h1><p>This package provides Dart and Flutter developers with tools and libraries to interact with Apillon services, simplifying the use of Apillon&#39;s REST API by reducing boilerplate code and streamlining multi-step processes into single operations.</p><h2 id="requirements" tabindex="-1"><a class="header-anchor" href="#requirements" aria-hidden="true">#</a> Requirements</h2><ul><li>Dart SDK: &#39;&gt;=3.2.2 &lt;4.0.0&#39;</li><li>An Apillon API key and secret</li><li>http package version 1.1.0</li></ul><h2 id="getting-started" tabindex="-1"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting started</h2>',5),r={href:"https://app.apillon.io",target:"_blank",rel:"noopener noreferrer"},k={href:"https://pub.dev/packages/apillon_flutter",target:"_blank",rel:"noopener noreferrer"},d={href:"https://github.com/Apillon/flutter-sdk",target:"_blank",rel:"noopener noreferrer"},v=s("code",null,"pubspec.yaml",-1),m=p(`<div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">dependencies</span><span class="token punctuation">:</span>
  <span class="token key atrule">apillon_flutter</span><span class="token punctuation">:</span> ^0.0.1
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="initialization" tabindex="-1"><a class="header-anchor" href="#initialization" aria-hidden="true">#</a> Initialization</h3><p>To start using the SDK, you need to import it and configure it with your Apillon API key and secret. Here&#39;s an example of how to initialize the Storage module:</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:apillon_flutter/apillon_flutter.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> storage <span class="token operator">=</span> <span class="token class-name">Storage</span><span class="token punctuation">(</span><span class="token class-name">ApillonConfig</span><span class="token punctuation">(</span>
    key<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiKey&#39;</span></span><span class="token punctuation">,</span>
    secret<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiSecret&#39;</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>All modules in the Apillon Flutter SDK require the same initial configuration of <code>key</code> and <code>secret</code>.</p><h2 id="modules" tabindex="-1"><a class="header-anchor" href="#modules" aria-hidden="true">#</a> Modules</h2><p>The Apillon Flutter SDK consists of several modules, each corresponding to a specific Apillon service. Below are examples of how to use some of these modules.</p><h3 id="storage" tabindex="-1"><a class="header-anchor" href="#storage" aria-hidden="true">#</a> Storage</h3><p>The Storage module provides functionalities for interacting with the Storage service.</p><h4 id="usage-example" tabindex="-1"><a class="header-anchor" href="#usage-example" aria-hidden="true">#</a> Usage example</h4><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;dart:io&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:apillon_flutter/apillon_flutter.dart&#39;</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:path/path.dart&#39;</span></span> <span class="token operator">as</span> path<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> storage <span class="token operator">=</span> <span class="token class-name">Storage</span><span class="token punctuation">(</span><span class="token class-name">ApillonConfig</span><span class="token punctuation">(</span>
    key<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiKey&#39;</span></span><span class="token punctuation">,</span>
    secret<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiSecret&#39;</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// List all buckets</span>
  <span class="token keyword">var</span> buckets <span class="token operator">=</span> <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">listBuckets</span><span class="token punctuation">(</span><span class="token class-name">IApillonPagination</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Buckets:&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> bucket <span class="token keyword">in</span> buckets<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">bucket<span class="token punctuation">.</span>name</span><span class="token punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">bucket<span class="token punctuation">.</span>uuid</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">var</span> bucketUuid <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;eaff2672-3012-46fb-9278-5efacc6cb616&#39;</span></span><span class="token punctuation">;</span>

  <span class="token comment">// Get specific bucket details</span>
  <span class="token keyword">var</span> bucketDetails <span class="token operator">=</span> <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Bucket Details: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">bucketDetails<span class="token punctuation">.</span>name</span><span class="token punctuation">}</span></span><span class="token string">, Size: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">bucketDetails<span class="token punctuation">.</span>size</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// List files in the bucket</span>
  <span class="token keyword">var</span> files <span class="token operator">=</span> <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listFiles</span><span class="token punctuation">(</span><span class="token class-name">IBucketFilesRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Files in bucket:&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> file <span class="token keyword">in</span> files<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">file<span class="token punctuation">.</span>name</span><span class="token punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">file<span class="token punctuation">.</span>uuid</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Upload files from a folder</span>
  <span class="token keyword">var</span> uploadDir <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token class-name">Directory</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;my-folder&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Uploading files from </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">uploadDir</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uploadFromFolder</span><span class="token punctuation">(</span>uploadDir<span class="token punctuation">,</span> <span class="token class-name">IFileUploadRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Upload a single file from buffer</span>
  <span class="token keyword">var</span> filePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token class-name">Directory</span><span class="token punctuation">.</span>current<span class="token punctuation">.</span>path<span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">&#39;file.txt&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> fileBytes <span class="token operator">=</span> <span class="token class-name">File</span><span class="token punctuation">(</span>filePath<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">readAsBytesSync</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">uploadFiles</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token class-name">FileMetadata</span><span class="token punctuation">(</span>
      fileName<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;file.txt&#39;</span></span><span class="token punctuation">,</span>
      contentType<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;text/plain&#39;</span></span><span class="token punctuation">,</span>
      content<span class="token punctuation">:</span> fileBytes<span class="token punctuation">,</span>
    <span class="token punctuation">)</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">IFileUploadRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Get details of a specific file</span>
  <span class="token keyword">var</span> fileUuid <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;eaff2672-3012-46fb-9278-5efacc6cb616&#39;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> fileDetails <span class="token operator">=</span> <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">file</span><span class="token punctuation">(</span>fileUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token keyword">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;File Details: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">fileDetails<span class="token punctuation">.</span>name</span><span class="token punctuation">}</span></span><span class="token string">, Size: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">fileDetails<span class="token punctuation">.</span>size</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="ipns-methods" tabindex="-1"><a class="header-anchor" href="#ipns-methods" aria-hidden="true">#</a> IPNS methods</h4><p>The Storage module additionally contains methods for manipulating IPNS records for a specific storage bucket.</p><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:apillon_flutter/apillon_flutter.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> storage <span class="token operator">=</span> <span class="token class-name">Storage</span><span class="token punctuation">(</span><span class="token class-name">ApillonConfig</span><span class="token punctuation">(</span>
    key<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiKey&#39;</span></span><span class="token punctuation">,</span>
    secret<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiSecret&#39;</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> bucketUuid <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;eaff2672-3012-46fb-9278-5efacc6cb616&#39;</span></span><span class="token punctuation">;</span>

  <span class="token comment">// List all existing IPNS records in a bucket</span>
  <span class="token keyword">var</span> ipnsRecords <span class="token operator">=</span> <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">listIpnsNames</span><span class="token punctuation">(</span><span class="token class-name">IPNSListRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;IPNS Records:&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> record <span class="token keyword">in</span> ipnsRecords<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;</span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">record<span class="token punctuation">.</span>name</span><span class="token punctuation">}</span></span><span class="token string"> - </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">record<span class="token punctuation">.</span>uuid</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// Create a new IPNS record</span>
  <span class="token keyword">const</span> name <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;Test IPNS&#39;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> description <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;This is a test description&#39;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> cid <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;QmUxtfFfWFguxSWUUy2FiBsGuH6Px4KYFxJqNYJRiDpemj&#39;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> newIpnsRecord <span class="token operator">=</span> <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">createIpns</span><span class="token punctuation">(</span><span class="token class-name">ICreateIpns</span><span class="token punctuation">(</span>
    name<span class="token punctuation">:</span> name<span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> description<span class="token punctuation">,</span>
    cid<span class="token punctuation">:</span> cid<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;New IPNS Record: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">newIpnsRecord<span class="token punctuation">.</span>uuid</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Publish an IPNS record to point to a new CID</span>
  <span class="token keyword">const</span> newCid <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;Qmakf2aN7wzt5u9H3RadGjfotu62JsDfBq8hHzGsV2LZFx&#39;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ipns</span><span class="token punctuation">(</span>newIpnsRecord<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">publish</span><span class="token punctuation">(</span>newCid<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;IPNS record published to new CID: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">newCid</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Delete an IPNS record</span>
  <span class="token keyword">await</span> storage<span class="token punctuation">.</span><span class="token function">bucket</span><span class="token punctuation">(</span>bucketUuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">ipns</span><span class="token punctuation">(</span>newIpnsRecord<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;IPNS record deleted: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">newIpnsRecord<span class="token punctuation">.</span>uuid</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="nfts" tabindex="-1"><a class="header-anchor" href="#nfts" aria-hidden="true">#</a> NFTs</h3><p>The NFT module encapsulates functionalities for the NFT service.</p><h4 id="usage-example-1" tabindex="-1"><a class="header-anchor" href="#usage-example-1" aria-hidden="true">#</a> Usage example</h4><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:apillon_flutter/apillon_flutter.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> nft <span class="token operator">=</span> <span class="token class-name">Nft</span><span class="token punctuation">(</span><span class="token class-name">ApillonConfig</span><span class="token punctuation">(</span>
    key<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiKey&#39;</span></span><span class="token punctuation">,</span>
    secret<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiSecret&#39;</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Create a new NFT collection</span>
  <span class="token keyword">var</span> collection <span class="token operator">=</span> <span class="token keyword">await</span> nft<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token class-name">ICreateCollection</span><span class="token punctuation">(</span>
    chain1<span class="token punctuation">:</span> <span class="token class-name">EvmChain</span><span class="token punctuation">.</span>moonbase<span class="token punctuation">,</span>
    collectionType1<span class="token punctuation">:</span> <span class="token class-name">CollectionType</span><span class="token punctuation">.</span>generic<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;Space Explorers&#39;</span></span><span class="token punctuation">,</span>
    description<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;A collection of space explorers&#39;</span></span><span class="token punctuation">,</span>
    symbol<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;SE&#39;</span></span><span class="token punctuation">,</span>
    royaltiesFees<span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    royaltiesAddress<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;0x95B8c6b9225456107649776EF8aAF20C42d58814&#39;</span></span><span class="token punctuation">,</span>
    baseUri<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;https://test.com/metadata/&#39;</span></span><span class="token punctuation">,</span>
    baseExtension<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;.json&#39;</span></span><span class="token punctuation">,</span>
    maxSupply<span class="token punctuation">:</span> <span class="token number">50</span><span class="token punctuation">,</span>
    isRevokable<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    isSoulbound<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
    drop<span class="token punctuation">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Collection created: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">collection<span class="token punctuation">.</span>uuid</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// or create a substrate collection</span>
  <span class="token keyword">var</span> substrateCollection <span class="token operator">=</span> <span class="token keyword">await</span> nft<span class="token punctuation">.</span><span class="token function">createSubstrate</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    chain1<span class="token punctuation">:</span> <span class="token class-name">SubstrateChain</span><span class="token punctuation">.</span>astar<span class="token punctuation">,</span>
    collectionType1<span class="token punctuation">:</span> <span class="token class-name">CollectionType</span><span class="token punctuation">.</span>generic<span class="token punctuation">,</span>
    name<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;SpaceExplorers&#39;</span></span><span class="token punctuation">,</span>
    symbol<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;SE&#39;</span></span><span class="token punctuation">,</span>
    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Mint a new NFT in the collection</span>
  <span class="token keyword">var</span> mintResult <span class="token operator">=</span> <span class="token keyword">await</span> nft<span class="token punctuation">.</span><span class="token function">collection</span><span class="token punctuation">(</span>collection<span class="token punctuation">.</span>uuid<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">mint</span><span class="token punctuation">(</span><span class="token class-name">IMintNftData</span><span class="token punctuation">(</span>
    receivingAddress<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;0x5BA8B0c24bA5307b67E619ad500a635204F73bF1&#39;</span></span><span class="token punctuation">,</span>
    quantity<span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Mint transaction hash: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">mintResult<span class="token punctuation">.</span>transactionHash</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// List NFT collections</span>
  <span class="token keyword">var</span> collections <span class="token operator">=</span> <span class="token keyword">await</span> nft<span class="token punctuation">.</span><span class="token function">listCollections</span><span class="token punctuation">(</span><span class="token class-name">ICollectionFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Transfer NFT ownership to another address</span>
  <span class="token keyword">await</span> collection<span class="token punctuation">.</span><span class="token function">transferOwnership</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="identity" tabindex="-1"><a class="header-anchor" href="#identity" aria-hidden="true">#</a> Identity</h3><p>The Identity module provides functionalities for validating wallet signatures and fetching identity data.</p><h4 id="usage-example-2" tabindex="-1"><a class="header-anchor" href="#usage-example-2" aria-hidden="true">#</a> Usage example</h4><div class="language-dart line-numbers-mode" data-ext="dart"><pre class="language-dart"><code><span class="token keyword">import</span> <span class="token string-literal"><span class="token string">&#39;package:apillon_flutter/apillon_flutter.dart&#39;</span></span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">async</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> identity <span class="token operator">=</span> <span class="token class-name">Identity</span><span class="token punctuation">(</span><span class="token class-name">ApillonConfig</span><span class="token punctuation">(</span>
    key<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiKey&#39;</span></span><span class="token punctuation">,</span>
    secret<span class="token punctuation">:</span> <span class="token string-literal"><span class="token string">&#39;yourApiSecret&#39;</span></span><span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Generate a signing message for EVM wallet signature validation</span>
  <span class="token keyword">const</span> customMessage <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;Identity EVM SDK test&#39;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> signingMessage <span class="token operator">=</span> identity<span class="token punctuation">.</span><span class="token function">generateSigningMessage</span><span class="token punctuation">(</span>customMessage<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string-literal"><span class="token string">&quot;message&quot;</span></span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Signing message: </span><span class="token interpolation"><span class="token punctuation">$</span><span class="token expression">signingMessage</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">var</span> walletAddress <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;0xa79bg13g2...&#39;</span></span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> signature <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;0xYourSignature&#39;</span></span><span class="token punctuation">;</span> <span class="token comment">// signature obtained from the user&#39;s wallet by the client app</span>

  <span class="token comment">// Validate EVM wallet signature</span>
  <span class="token keyword">var</span> validationResult <span class="token operator">=</span> <span class="token keyword">await</span> identity<span class="token punctuation">.</span><span class="token function">validateEvmWalletSignature</span><span class="token punctuation">(</span><span class="token class-name">IValidateEvmWalletSignature</span><span class="token punctuation">(</span>
    walletAddress<span class="token punctuation">:</span> walletAddress<span class="token punctuation">,</span>
    message<span class="token punctuation">:</span> signingMessage<span class="token punctuation">,</span>
    signature<span class="token punctuation">:</span> signature<span class="token punctuation">,</span>
  <span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Is valid: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">validationResult<span class="token punctuation">.</span>isValid</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Address: </span><span class="token interpolation"><span class="token punctuation">\${</span><span class="token expression">validationResult<span class="token punctuation">.</span>address</span><span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// Get wallet identity profile for a Polkadot address</span>
  <span class="token keyword">var</span> polkadotAddress <span class="token operator">=</span> <span class="token string-literal"><span class="token string">&#39;5HqHQDGcHqS...&#39;</span></span><span class="token punctuation">,</span>
  <span class="token keyword">var</span> identityProfile <span class="token operator">=</span> <span class="token keyword">await</span> identity<span class="token punctuation">.</span><span class="token function">getWalletIdentity</span><span class="token punctuation">(</span>polkadotAddress<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">print</span><span class="token punctuation">(</span><span class="token string-literal"><span class="token string">&#39;Identity Profile: \${identityProfile.subsocial[&#39;</span></span>content<span class="token string-literal"><span class="token string">&#39;][&#39;</span></span>name<span class="token string-literal"><span class="token string">&#39;]}&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,22);function g(b,f){const a=o("ExternalLinkIcon");return i(),c("div",null,[u,s("p",null,[n("To use the Apillon Flutter SDK, you must first register an account at "),s("a",r,[n("Apillon.io"),t(a)]),n(", create a project, and generate an API key with the appropriate permissions.")]),s("p",null,[n("The Flutter SDK package is available as a Dart package on "),s("a",k,[n("pub.dev"),t(a)]),n(" and you can also check it out directly on "),s("a",d,[n("GitHub"),t(a)]),n(". To include it in your project, add the following to your "),v,n(" file:")]),m])}const y=e(l,[["render",g],["__file","10-flutter-sdk.html.vue"]]);export{y as default};
